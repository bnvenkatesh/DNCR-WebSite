@using SD.ACMA.DNCRProject.Website.Controllers
@using SD.ACMA.DNCRProject.Website.Extensions
@inherits Umbraco.Web.Mvc.UmbracoViewPage<SD.ACMA.DNCRProject.Website.Models.ChangePasswordViewModel>

@{
    this.MapModel();
}

@if (!String.IsNullOrEmpty(ViewBag.ChangePasswordErrorMessage) || Model.IsSubmitted)
{
    <script>
        $(function() {
            $("#changePassword").dialog("open");
        });
    </script>
}

<script>
    $(function () {
        $("#CurrentPassword").val("");
        $("#NewPassword").val("");
        $("#ConfirmPassword").val("");
        $("#changePasswordButton").click(function (event) {
            event.preventDefault();
            $("#changePassword").dialog("open");
        });
        $("#closeChangePassword").click(function (event) {
            event.preventDefault();
            $("#changePassword").dialog("close");
        });
    });
</script>

<div id="changePassword" class="dialog" title="Change your password">
    @if (!Model.IsSubmitted)
    {
        using (Html.BeginUmbracoForm<UserSurfaceController>("ChangePassword"))
        {
            @Html.AntiForgeryToken()
            <div class="dialogDesc">
                <p>Enter your current password and a new password for your account.</p>
            </div>
            <div>
                <p class="italic">All fields marked with * are mandatory</p>
                <div class="errorContainer"></div>
            </div>
            <div class="formField fieldMargin">
                <div class="floatLeft">
                    @Html.RequiredLabelFor(model => model.CurrentPassword, new { @class = "inputLabel" })
                </div>
                <div class="floatLeft">
                    @Html.TextBoxFor(model => model.CurrentPassword, new {@class = "long", type = "password"})
                    @Html.ValidationMessageFor(model => model.CurrentPassword, "", new {@class = "error numberError"})
                </div>
                <div class="clear"></div>
            </div>
            <div class="formField fieldMargin">
                <div class="floatLeft">
                    @Html.RequiredLabelFor(model => model.NewPassword, new { @class = "inputLabel" })
                </div>
                <div class="floatLeft">
                    @Html.TextBoxFor(model => model.NewPassword, new {@class = "long", type = "password"})
                    @Html.ValidationMessageFor(model => model.NewPassword, "", new {@class = "error numberError"})
                </div>
                <div class="clear"></div>
            </div>
            <div class="formField fieldMargin">
                <div class="floatLeft">
                    @Html.RequiredLabelFor(model => model.ConfirmPassword, new { @class = "inputLabel" })
                </div>
                <div class="floatLeft">
                    @Html.TextBoxFor(model => model.ConfirmPassword, new {@class = "long", type = "password"})
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new {@class = "error numberError"})
                </div>
                <div class="clear"></div>
            </div>
            <hr/>
            <div class="formError">@Html.Raw(ViewBag.ChangePasswordErrorMessage)</div>
            <div class="formField">
                <button class="shaded width200">CHANGE PASSWORD</button>
                <button type="button" id="closeChangePassword" class="width125">CANCEL</button>
            </div>
        }
    }
    else
    {
        <div class="dialogDesc">
            <p>Your password has been updated.</p>
        </div>
        <div class="formField">
            <button type="button" id="closeChangePassword" class="shaded width125">OK</button>
        </div>
    }
</div>